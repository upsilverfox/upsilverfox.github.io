{"meta":{"title":"welcome","subtitle":null,"description":null,"author":"银狐","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2019-09-20T03:09:41.000Z","updated":"2019-09-21T00:53:37.532Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"分类","date":"2019-09-20T03:05:34.000Z","updated":"2019-09-20T08:07:25.764Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-09-20T03:08:37.000Z","updated":"2019-09-20T08:06:13.317Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"python-面对对象编程基础","slug":"python-面对对象编程基础","date":"2019-09-27T12:14:11.000Z","updated":"2019-09-27T12:25:53.029Z","comments":true,"path":"2019/09/27/python-面对对象编程基础/","link":"","permalink":"http://yoursite.com/2019/09/27/python-面对对象编程基础/","excerpt":"面对对象把一组数据结构和处理它们的方法组成对象（object），把相同行为的对象归纳为类（class），通过类的封装（encapsulation）隐藏内部细节，通过继承（inheritance）实现类的特化（specialization）和泛化（generalization），通过多态（polymorphism）实现基于对象类型的动态分派。简单的来说就是面向对象的三要素：封装、继承、多态","text":"面对对象把一组数据结构和处理它们的方法组成对象（object），把相同行为的对象归纳为类（class），通过类的封装（encapsulation）隐藏内部细节，通过继承（inheritance）实现类的特化（specialization）和泛化（generalization），通过多态（polymorphism）实现基于对象类型的动态分派。简单的来说就是面向对象的三要素：封装、继承、多态","categories":[{"name":"python","slug":"python","permalink":"http://yoursite.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"python-练习","slug":"python-练习","date":"2019-09-27T04:53:18.000Z","updated":"2019-09-27T12:06:06.985Z","comments":true,"path":"2019/09/27/python-练习/","link":"","permalink":"http://yoursite.com/2019/09/27/python-练习/","excerpt":"练习一：在屏幕上显示跑马灯文字","text":"练习一：在屏幕上显示跑马灯文字 练习二：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。生成指定长度的验证码，由大小写英文字母和数字构成的随机验证码 练习三：计算指定的年月日是这一年的第几天注：公历闰年判定遵循的规律为: 四年一闰,百年不闰,四百年再闰。公历闰年的简单计算方法（符合以下条件之一的年份即为闰年）1.能被4整除而不能被100整除。2.能被100整除也能被400整除。 练习四：设计一个函数返回传入的列表中最大和第二大的元素的值。 练习五：打印杨辉三角形","categories":[{"name":"python","slug":"python","permalink":"http://yoursite.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"python-web开发 (一)","slug":"python-web开发-一","date":"2019-09-26T14:10:44.000Z","updated":"2019-09-27T12:25:50.007Z","comments":true,"path":"2019/09/26/python-web开发-一/","link":"","permalink":"http://yoursite.com/2019/09/26/python-web开发-一/","excerpt":"什么是web开发呢，其实就是开发一个网站了。那开发网站需要用到哪些知识呢1、python基础，因为用python开发的，所以python指定要会，最起码你也得会条件判断，循环，函数，类这些知识；2、html、css的基础知识，因为要开发网站，网页都html和css写的，最起码这些知识你得会，就算不会写前端，开发不出来特别漂亮的页面，网站，最起码要能看懂html标签是；3、数据库基础知识，因为开发一个网站的话，数据存在哪里，就是在数据库里，那你最起码要会数据库的增删改查吧，要不然怎么存数据，取数据呢上面这些知识会的话，就基本上可以了，可以开发一个简单的小站就没有问题了，如果想开发比较大型的网站，业务逻辑比较复杂的，那就得用到其他的知识了，比如说redis、MQ等等。","text":"什么是web开发呢，其实就是开发一个网站了。那开发网站需要用到哪些知识呢1、python基础，因为用python开发的，所以python指定要会，最起码你也得会条件判断，循环，函数，类这些知识；2、html、css的基础知识，因为要开发网站，网页都html和css写的，最起码这些知识你得会，就算不会写前端，开发不出来特别漂亮的页面，网站，最起码要能看懂html标签是；3、数据库基础知识，因为开发一个网站的话，数据存在哪里，就是在数据库里，那你最起码要会数据库的增删改查吧，要不然怎么存数据，取数据呢上面这些知识会的话，就基本上可以了，可以开发一个简单的小站就没有问题了，如果想开发比较大型的网站，业务逻辑比较复杂的，那就得用到其他的知识了，比如说redis、MQ等等。 链接：https://blog.csdn.net/weixin_44266137/article/list/3?t=1&amp;","categories":[{"name":"python-web","slug":"python-web","permalink":"http://yoursite.com/categories/python-web/"}],"tags":[{"name":"python-web","slug":"python-web","permalink":"http://yoursite.com/tags/python-web/"}]},{"title":"python-字符串和常用数据结构","slug":"python-字符串和常用数据结构","date":"2019-09-26T13:19:58.000Z","updated":"2019-09-27T04:54:07.760Z","comments":true,"path":"2019/09/26/python-字符串和常用数据结构/","link":"","permalink":"http://yoursite.com/2019/09/26/python-字符串和常用数据结构/","excerpt":"字符串今天的计算机处理得更多的数据都是以文本信息的方式存在的，而Python表示文本信息的方式就是字符串类型。所谓字符串，就是由零个或多个字符组成的有限序列，一般记为：","text":"字符串今天的计算机处理得更多的数据都是以文本信息的方式存在的，而Python表示文本信息的方式就是字符串类型。所谓字符串，就是由零个或多个字符组成的有限序列，一般记为： 我们可以通过下面的代码来了解字符串的使用。 注：jupyter notebook 执行命令的时候报错：IndentationError: unexpected indent （意外的缩进）resolution：去掉空格除了字符串，Python还内置了多种类型的数据结构，如果要在程序中保存和操作数据，绝大多数时候可以利用现有的数据结构来实现，最常用的包括列表、元组、集合和字典。 使用列表 下面的代码演示了如何定义列表、使用下标访问列表元素以及添加和删除元素的操作 通过切片操作我们可以实现对列表的复制或者将列表中的一部分取出来创建出新的列表，代码如下所示。 对列表内容进行排序 使用列表的生成式语法来创建列表 ，Python中还有另外一种定义生成器的方式，就是通过yield关键字将一个普通函数改造成生成器函数。 使用元组Python 的元组与列表类似，不同之处在于元组的元素不能修改。元组在创建时间和占用的空间上面都优于列表。我们使用sys模块的getsizeof函数来检查存储同样的元素的元组和列表各自占用了多少内存空间 使用集合Python中的集合跟数学上的集合是一致的，不允许有重复元素，而且可以进行交集、并集、差集等运算。说明： Python中允许通过一些特殊的方法来为某种类型或数据结构自定义运算符，我们对集合进行运算的时候可以调用集合对象的方法，也可以直接使用对应的运算符，例如&amp;运算符跟intersection方法的作用就是一样的，但是使用运算符让代码更加直观。","categories":[{"name":"python","slug":"python","permalink":"http://yoursite.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"python-函数与模块的使用","slug":"python-函数与模块的使用","date":"2019-09-26T11:34:08.000Z","updated":"2019-09-26T13:28:26.222Z","comments":true,"path":"2019/09/26/python-函数与模块的使用/","link":"","permalink":"http://yoursite.com/2019/09/26/python-函数与模块的使用/","excerpt":"1.函数的定义 在Python中可以使用def关键字来定义函数，和c++的类类似，每个函数都有一个名字，而且命名规则跟变量的命名规则是一致的。在函数名后面的圆括号中可以放置传递给函数的参数，这一点和数学上的函数非常相似，程序中函数的参数就相当于是数学上说的函数的自变量，而函数执行完成后我们可以通过return关键字来返回一个值，这相当于数学上说的函数的因变量。 例题： 求从m选取n的组合","text":"1.函数的定义 在Python中可以使用def关键字来定义函数，和c++的类类似，每个函数都有一个名字，而且命名规则跟变量的命名规则是一致的。在函数名后面的圆括号中可以放置传递给函数的参数，这一点和数学上的函数非常相似，程序中函数的参数就相当于是数学上说的函数的自变量，而函数执行完成后我们可以通过return关键字来返回一个值，这相当于数学上说的函数的因变量。 例题： 求从m选取n的组合 说明： Python的math模块中其实已经有一个factorial函数了，事实上要计算阶乘可以直接使用这个现成的函数而不用自己定义。 2.函数参数 函数是绝大多数编程语言中都支持的一个代码的“构建块”，但是Python中的函数与其他语言中的函数还是有很多不太相同的地方，其中一个显著的区别就是Python对函数参数的处理。在Python中，函数的参数可以有默认值，也支持使用可变参数，所以Python并不需要像其他语言一样支持函数的重载， 例如： 例如： 注：在参数名前面的*表示args是一个可变参数，即在调用add函数时可以传入0个或多个参数 3. 用模块管理函数对于任何一种编程语言来说，给变量、函数这样的标识符起名字都是一个让人头疼的问题，因为我们会遇到命名冲突这种尴尬的情况。最简单的场景就是在同一个.py文件中定义了两个同名函数，由于Python没有函数重载的概念，那么后面的定义会覆盖之前的定义，也就意味着两个函数同名函数实际上只有一个是存在的。例如： 显然他输出的是最后一个函数。解决办法：在不同的模块中可以有同名的函数，在使用函数的时候我们通过import关键字导入指定的模块就可以区分到底要使用的是哪个模块中的foo函数，如下图所示：module1.py module2.py test.py 4. name需要说明的是，如果我们导入的模块除了定义函数之外还中有可以执行代码，那么Python解释器在导入这个模块时就会执行这些代码，事实上我们可能并不希望如此，因此如果我们在模块中编写了执行代码，最好是将这些执行代码放入如下所示的条件中，这样的话除非直接运行该模块，if条件下的这些代码是不会执行的，因为只有直接执行的模块的名字才是“main”。\\","categories":[{"name":"python","slug":"python","permalink":"http://yoursite.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"项目开发构想","slug":"项目开发构想","date":"2019-09-25T14:27:41.000Z","updated":"2019-09-25T14:37:46.493Z","comments":true,"path":"2019/09/25/项目开发构想/","link":"","permalink":"http://yoursite.com/2019/09/25/项目开发构想/","excerpt":"","text":"项目构想现在有很多大学生面对大学生活很迷茫，不知道自己要干什么，根据这种情况，设计一个软件，以学校为大单位，以专业为小单位将学生在大学各个阶段可以参加的比赛进行分类汇总，以便学生参考。 项目目标大目标： 利用大数据分类汇总所有学校各院各专业的比赛信息小目标： 把桂电的比赛信息汇总出来 软件开发过程表：https://wenku.baidu.com/view/d25593dd5727a5e9856a61f9.html","categories":[{"name":"项目开发","slug":"项目开发","permalink":"http://yoursite.com/categories/项目开发/"}],"tags":[{"name":"项目开发","slug":"项目开发","permalink":"http://yoursite.com/tags/项目开发/"}]},{"title":"python-循环结构","slug":"python-循环结构","date":"2019-09-25T12:34:19.000Z","updated":"2019-09-26T11:56:08.993Z","comments":true,"path":"2019/09/25/python-循环结构/","link":"","permalink":"http://yoursite.com/2019/09/25/python-循环结构/","excerpt":"介绍在Python中构造循环结构有两种做法，一种是for-in循环，一种是while循环。 1. for-in循环如果明确的知道循环执行的次数或者是要对一个容器进行迭代，那么推荐使用for-in循环，例如求1到100的和:","text":"介绍在Python中构造循环结构有两种做法，一种是for-in循环，一种是while循环。 1. for-in循环如果明确的知道循环执行的次数或者是要对一个容器进行迭代，那么推荐使用for-in循环，例如求1到100的和: 输出九九乘法表： 需要说明的是上面代码中的range类型，range可以用来产生一个不变的数值序列，而且这个序列通常都是用在循环中的，例如：range(101)可以产生一个0到100的整数序列。range(1, 100)可以产生一个1到99的整数序列。range(1, 100, 2)可以产生一个1到99的奇数序列，其中的2是步长，即数值序列的增量。 2. while循环如果要构造不知道具体循环次数的循环结构，我们推荐使用while循环，while循环通过一个能够产生或转换出bool值的表达式来控制循环，表达式的值为True循环继续，表达式的值为False循环结束。例如： 上面的代码中使用了break关键字来提前终止循环，需要注意的是break只能终止它所在的那个循环 continue可以用来放弃本次循环后续的代码直接让循环进入下一轮。","categories":[{"name":"python","slug":"python","permalink":"http://yoursite.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"python-分支结构","slug":"python-分支结构","date":"2019-09-25T12:04:33.000Z","updated":"2019-09-25T13:03:29.404Z","comments":true,"path":"2019/09/25/python-分支结构/","link":"","permalink":"http://yoursite.com/2019/09/25/python-分支结构/","excerpt":"1. if语句的使用1） 在Python中，要构造分支结构可以使用if、elif和else关键字。所谓关键字就是有特殊含义的单词，像if和else就是专门用于构造分支结构的关键字，很显然你不能够使用它作为变量名.注：和C/C++、Java等语言不同，Python中没有用花括号来构造代码块而是使用了缩进的方式来设置代码的层次结构，如果if条件成立的情况下需要执行多条语句，只要保持多条语句具有相同的缩进就可以了，换句话说连续的代码如果又保持了相同的缩进那么它们属于同一个代码块，相当于是一个执行的整体。","text":"1. if语句的使用1） 在Python中，要构造分支结构可以使用if、elif和else关键字。所谓关键字就是有特殊含义的单词，像if和else就是专门用于构造分支结构的关键字，很显然你不能够使用它作为变量名.注：和C/C++、Java等语言不同，Python中没有用花括号来构造代码块而是使用了缩进的方式来设置代码的层次结构，如果if条件成立的情况下需要执行多条语句，只要保持多条语句具有相同的缩进就可以了，换句话说连续的代码如果又保持了相同的缩进那么它们属于同一个代码块，相当于是一个执行的整体。 2） 分支结构是可以嵌套的，例如判断是否通关以后还要根据你获得的宝物或者道具的数量对你的表现给出等级（比如点亮两颗或三颗星星），那么我们就需要在if的内部构造出一个新的分支结构，同理elif和else中也可以再构造新的分支，我们称之为嵌套的分支结构， 2. 练习1） 分段函数求值 2）掷骰子决定做什么事情","categories":[{"name":"python","slug":"python","permalink":"http://yoursite.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"设置U盘为第一启动项","slug":"设置U盘为第一启动项","date":"2019-09-25T09:29:41.000Z","updated":"2019-09-25T13:10:27.220Z","comments":true,"path":"2019/09/25/设置U盘为第一启动项/","link":"","permalink":"http://yoursite.com/2019/09/25/设置U盘为第一启动项/","excerpt":"如果在刷机过程中电脑出现重启错误怎么办 先试试强制关机后按F12看看能不能进入刷机U盘的界面 去bois设置U盘为第一启动项 1） 那我电脑为例进入bois的快捷键时F2.示例图：","text":"如果在刷机过程中电脑出现重启错误怎么办 先试试强制关机后按F12看看能不能进入刷机U盘的界面 去bois设置U盘为第一启动项 1） 那我电脑为例进入bois的快捷键时F2.示例图： 2） 去启动那一项设置，将U盘设置为优先级。 示例图： 3） 保存并退出，插入装机U盘便能进入到刷机界面。 示例图：","categories":[{"name":"刷机教程","slug":"刷机教程","permalink":"http://yoursite.com/categories/刷机教程/"}],"tags":[{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"c++实现链表","slug":"c-实现链表","date":"2019-09-24T13:52:12.000Z","updated":"2019-09-26T13:51:54.656Z","comments":true,"path":"2019/09/24/c-实现链表/","link":"","permalink":"http://yoursite.com/2019/09/24/c-实现链表/","excerpt":"","text":"c++链表的构造链表结构体的构造。构造头结点head，指向NULL（head-&gt;next = NULL）构造当前结点，用于记录当前链表构造的位置，构造新结点，用于循环插入链表。循环插入链表，根据条件结束并返回头结点。 c++链表解决代码1）类的定义 2）链表的创建","categories":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/categories/c/"}],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"}]},{"title":"python-变量","slug":"python-变量","date":"2019-09-24T10:14:23.000Z","updated":"2019-09-27T02:17:05.480Z","comments":true,"path":"2019/09/24/python-变量/","link":"","permalink":"http://yoursite.com/2019/09/24/python-变量/","excerpt":"1. 变量命名规则1）硬性规则：变量名由字母（广义的Unicode字符，不包括特殊字符）、数字和下划线构成，数字不能开头。大小写敏感（大写的a和小写的A是两个不同的变量）。不要跟关键字（有特殊含义的单词）和系统保留字（如函数、模块等的名字）冲突。2）PEP 8要求：用小写字母拼写，多个单词用下划线连接。受保护的实例属性用单个下划线开头。私有的实例属性用两个下划线开头。","text":"1. 变量命名规则1）硬性规则：变量名由字母（广义的Unicode字符，不包括特殊字符）、数字和下划线构成，数字不能开头。大小写敏感（大写的a和小写的A是两个不同的变量）。不要跟关键字（有特殊含义的单词）和系统保留字（如函数、模块等的名字）冲突。2）PEP 8要求：用小写字母拼写，多个单词用下划线连接。受保护的实例属性用单个下划线开头。私有的实例属性用两个下划线开头。 2. 运算符注： 在实际开发中，如果搞不清楚运算符的优先级，可以使用括号来确保运算的执行顺序。 3. 变量类型转换12345int()：将一个数值或字符串转换成整数，可以指定进制。float()：将一个字符串转换成浮点数。str()：将指定的对象转换成字符串形式，可以指定编码。chr()：将整数转换成该编码对应的字符串（一个字符）。ord()：将字符串（一个字符）转换成对应的编码（整数）。 4.练习1）基本运算 2）用type检查类型 3）将华氏温度转换为摄氏温度 4）输入圆的半径计算计算周长 5）输入年份判断是不是闰年。","categories":[{"name":"python","slug":"python","permalink":"http://yoursite.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"linux基本操作","slug":"linux基本操作","date":"2019-09-24T08:12:43.000Z","updated":"2019-09-24T11:29:27.106Z","comments":true,"path":"2019/09/24/linux基本操作/","link":"","permalink":"http://yoursite.com/2019/09/24/linux基本操作/","excerpt":"cd命令这是一个非常基本，也是大家经常需要使用的命令，它用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。如： 123456cd /home 进入 '/ home' 目录' cd .. 返回上一级目录 cd ../.. 返回上两级目录 cd 进入个人的主目录 cd ~user1 进入个人的主目录 cd - 返回上次所在的目录","text":"cd命令这是一个非常基本，也是大家经常需要使用的命令，它用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。如： 123456cd /home 进入 '/ home' 目录' cd .. 返回上一级目录 cd ../.. 返回上两级目录 cd 进入个人的主目录 cd ~user1 进入个人的主目录 cd - 返回上次所在的目录 time命令该命令用于测算一个命令（即程序）的执行时间。它的使用非常简单，就像平时输入命令一样，不过在命令的前面加入一个time即可，例如 12time ./process time ps aux 安装命令123456789101112131415161718192021yum install #全部安装yum install #安装指定的软件yum groupinsall #安装程序组#更新和升级yum update #全部更新yum update #更新指定程序包yum check-update #检查可更新的程序yum upgrade #升级指定程序包yum groupupdate #升级程序组#查找和显示yum list #显示所有已安装和可以安装的程序包yum list #显示指定程序包的安装情况yum info #显示程序包信息yum groupinfo #显示程序组信息#删除命令yum remove #删除程序包yum groupremove #删除程序组yum deplist #查看程序包的依赖情况#清除缓存yum clean packages #清除缓存目录下的软件包yum clean headers #清除缓存目录下的heades","categories":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"http://yoursite.com/tags/linux/"}]},{"title":"win10自带虚拟机Hyper-V","slug":"win10自带虚拟机Hyper-V","date":"2019-09-23T09:03:18.000Z","updated":"2019-09-24T11:29:45.344Z","comments":true,"path":"2019/09/23/win10自带虚拟机Hyper-V/","link":"","permalink":"http://yoursite.com/2019/09/23/win10自带虚拟机Hyper-V/","excerpt":"教你如何使用win10自带虚拟机Hyper-V 按win+pause break快速打开控制面板的系统和安全中的系统，点击控制面板","text":"教你如何使用win10自带虚拟机Hyper-V 按win+pause break快速打开控制面板的系统和安全中的系统，点击控制面板 在控制面版中，打开程序组件，选择程序与功能。点击启动或关闭windows功能。 找到Hyper-V，打勾（注意win10家庭版时没有Hyper-V） 勾选后，点击立即重启 开机后找到Hyper-V，打开程序 虚拟机网络配置 打开Hyper-V，在右侧操作列表中点击“虚拟交换机管理”，打开虚拟交换机管理器 选择“新建虚拟网络交换机”，在虚拟交换机类型列表中选择“外部”，点击“创建虚拟交换机”，创建一个虚拟交换机，输入虚拟交换机的名称和说明，为虚拟交换机选择一个网络适配器（即物理网卡），点击“确定”。 等待应用更改 在Hyper-V管理器中，选择虚拟机，点击右侧操作列表中的“设置”，修改虚拟机配置。 在虚拟机设置界面，点击“网络适配器”，选择虚拟交换机，点击确定，这样就配置好了虚拟机的网络连接。这样就完成里虚拟机的网络配置了； 开始创建虚拟机了 下载虚拟机需要的镜像 推荐win10镜像链接：https://msdn.itellyou.cn/ 推荐Linux链接：https://ubuntu.com/download/desktop/thank-you?country=CN&amp;version=18.04.3&amp;architecture=amd64#download 将下载成功的镜像放在电脑上的一个文件夹中以备后用。 开始创建1）点击新建虚拟机 2）设置你的虚拟机的名称 3）指定代数，我选择的是第一代，继续选择下一步 4）网络配置，选择我们刚刚设置的网络名称 5）从我们的文件夹中选择镜像 6）后续就是下一步，完成。示意图： 7）这里显示已经创建好了，然后右键选择启动该虚拟机(有点小慢)。启动之后右键选择连接开始自动安装系统，注意选择语言，否则安装之后是英文，如果对英文有点感冒的话，这里就修改下，要不然安装好之后有需要在设置里修改。 安排： 选择语言点击install ubuntu，之后就是下一步、下一步。 说明：1.因为是虚拟机所以可以清空虚拟U盘里的东西，这样对你现有的电脑文件没有影响的 2. 如果重启的时候出现错误记得关闭虚拟机，然后在开启。 参考： https://baijiahao.baidu.com/s?id=1607835632188281786&amp;wfr=spider&amp;for=pc https://jingyan.baidu.com/article/a681b0de6109253b18434635.html https://jingyan.baidu.com/article/e9fb46e129349d7520f76648.html","categories":[{"name":"Hyper-v","slug":"Hyper-v","permalink":"http://yoursite.com/categories/Hyper-v/"}],"tags":[{"name":"计算机","slug":"计算机","permalink":"http://yoursite.com/tags/计算机/"}]},{"title":"初识python","slug":"初识python","date":"2019-09-23T08:43:11.000Z","updated":"2019-09-24T11:04:15.076Z","comments":true,"path":"2019/09/23/初识python/","link":"","permalink":"http://yoursite.com/2019/09/23/初识python/","excerpt":"Python的优缺点Python的优点很多，简单的可以总结为以下几点。简单和明确，做一件事只有一种方法。学习曲线低，跟其他很多语言相比，Python更容易上手。开放源代码，拥有强大的社区和生态圈。解释型语言，天生具有平台可移植性。支持两种主流的编程范式（面向对象编程和函数式编程）都提供了支持。可扩展性和可嵌入性，可以调用C/C++代码，也可以在C/C++中调用Python。代码规范程度高，可读性强，适合有代码洁癖和强迫症的人群。Python的缺点主要集中在以下几点。执行效率稍低，因此计算密集型任务可以由C/C++编写。代码无法加密，但是现在很多公司都不销售卖软件而是销售服务，这个问题会被淡化。在开发时可以选择的框架太多（如Web框架就有100多个），有选择的地方就有错误。","text":"Python的优缺点Python的优点很多，简单的可以总结为以下几点。简单和明确，做一件事只有一种方法。学习曲线低，跟其他很多语言相比，Python更容易上手。开放源代码，拥有强大的社区和生态圈。解释型语言，天生具有平台可移植性。支持两种主流的编程范式（面向对象编程和函数式编程）都提供了支持。可扩展性和可嵌入性，可以调用C/C++代码，也可以在C/C++中调用Python。代码规范程度高，可读性强，适合有代码洁癖和强迫症的人群。Python的缺点主要集中在以下几点。执行效率稍低，因此计算密集型任务可以由C/C++编写。代码无法加密，但是现在很多公司都不销售卖软件而是销售服务，这个问题会被淡化。在开发时可以选择的框架太多（如Web框架就有100多个），有选择的地方就有错误。 Python的应用领域目前Python在Web应用开发、云基础设施、DevOps、网络爬虫开发、数据分析挖掘、机器学习等领域都有着广泛的应用，因此也产生了Web后端开发、数据接口开发、自动化运维、自动化测试、科学计算和可视化、数据分析、量化交易、机器人开发、图像识别和处理等一系列的职位.本人主要感兴趣的有web开发和数据挖掘。 Linux环境下安装python3.xLinux环境自带了Python 3.x版本，在linux系统下: 代码中的注释注释是编程语言的一个重要组成部分，用于在源代码中解释代码的作用从而增强程序的可读性和可维护性，当然也可以将源代码中不需要参与运行的代码段通过注释来去掉，这一点在调试程序的时候经常用到。注释在随源代码进入预处理器或编译时会被移除，不会在目标代码中保留也不会影响程序的执行结果。单行注释 （以#和空格开头的部分）多行注释 （三个引号开头，三个引号结尾）-（！import）示例： 注：该处使用的时jupyter notebook工具 练习 import this听说这是”python之禅”，里面讲述的道理不仅仅适用于Python，也适用于其他编程语言。 学习使用turtle在屏幕上绘制图形。trutle英语翻译为海龟、人名：特特尔，理解：python绘图就像海龟在海中绘制美丽的图像。哈哈！1） turtle.setup() 函数用于启动一个图形窗口，它有四个参数，turtle.setup(width,height,startx,starty)，分别是：启动窗口的宽度和高度，表示窗口启动时，窗口左上角在屏幕中的坐标位置。向左为横坐标，向下为纵坐标。2） turtle.pensize()函数表示运动轨迹的宽度。它包含一个输入参数，即多少像素。3） turtle.pencolor()函数表示运动轨迹的颜色。它包含一个输入参数，即想要的颜色。4） turtle.seth()函数表示启动时运动的方向。它包含一个输入参数，是角度值。5） turtle.circle()函数表示绘制的图形为圆形，它包含两个参数，rad描述轨迹半径的位置，angle表示沿着圆形爬行的弧度值。6） turtle.fd()函数也可以用turtle.forward()表示，表示向前直线移动，它有一个参数表示移动的距离。主要是参考他人代码理解一波。示例：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758from turtle import * def HSB2RGB(hues): hues = hues * 3.59 #100转成359范围 rgb=[0.0,0.0,0.0] i = int(hues/60)%6 f = hues/60 -i if i == 0: rgb[0] = 1; rgb[1] = f; rgb[2] = 0 elif i == 1: rgb[0] = 1-f; rgb[1] = 1; rgb[2] = 0 elif i == 2: rgb[0] = 0; rgb[1] = 1; rgb[2] = f elif i == 3: rgb[0] = 0; rgb[1] = 1-f; rgb[2] = 1 elif i == 4: rgb[0] = f; rgb[1] = 0; rgb[2] = 1 elif i == 5: rgb[0] = 1; rgb[1] = 0; rgb[2] = 1-f return rgb def rainbow(): hues = 0.0 color(1,0,0) #绘制彩虹 hideturtle() speed(100) pensize(3) penup() goto(-400,-300) pendown() right(110) for i in range (100): circle(1000) right(0.13) hues = hues + 1 rgb = HSB2RGB(hues) color(rgb[0],rgb[1],rgb[2]) penup() def main(): setup(800, 600, 0, 0) bgcolor((0.8, 0.8, 1.0)) tracer(False) rainbow() #输出文字 tracer(False) goto(100,-100) pendown() color(\"red\") write(\"菜鸟一号\",align=\"center\", font=(\"Script MT Bold\", 80, \"bold\")) tracer(True) mainloop() if __name__ == \"__main__\": main() 运行结果：","categories":[{"name":"python","slug":"python","permalink":"http://yoursite.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"Excel","slug":"Excel","date":"2019-09-23T06:25:34.000Z","updated":"2019-09-25T11:58:00.570Z","comments":true,"path":"2019/09/23/Excel/","link":"","permalink":"http://yoursite.com/2019/09/23/Excel/","excerpt":"Excel 10大常用公式1） 逻辑判断2） 复杂条件逻辑判断3） 汇总求和4） 复杂条件汇总求和5） 查找引用6） 复杂条件查找引用7） 四舍五入8） 文本截取9） 条件计数10）平均值和极值统计","text":"Excel 10大常用公式1） 逻辑判断2） 复杂条件逻辑判断3） 汇总求和4） 复杂条件汇总求和5） 查找引用6） 复杂条件查找引用7） 四舍五入8） 文本截取9） 条件计数10）平均值和极值统计 1. 逻辑判断IF语句： 2. 复杂条件逻辑判断IF语句的复杂版本 3. 汇总求和SUM函数： 效果如下： 4. 复杂条件汇总求和sumifs函数： 效果如下： 5. 查找引用VLOOKUP函数： 效果如下： 6. 复杂条件查找引用INDEX函数、MATCH函数 7. 四舍五入ROUND函数 8. 文本截取LEFT函数、RIGHT函数、MID函数 9. 条件计数COUNTIF函数 10. 平均值和极值统计AVERAGE函数：求平均值MAX函数：求最大值MIN函数：求最小值 参考 https://www.sohu.com/a/210341793_695443","categories":[{"name":"办公软件","slug":"办公软件","permalink":"http://yoursite.com/categories/办公软件/"}],"tags":[{"name":"Excel","slug":"Excel","permalink":"http://yoursite.com/tags/Excel/"}]},{"title":"ppt","slug":"ppt操作","date":"2019-09-23T06:24:59.000Z","updated":"2019-09-24T11:30:36.315Z","comments":true,"path":"2019/09/23/ppt操作/","link":"","permalink":"http://yoursite.com/2019/09/23/ppt操作/","excerpt":"ppt中将图片设置为高150px，宽100px。PX=pixel=像素在高度那块输入150像素，宽度输入100像素。注意不能输入px。 如何修改PPT中左下方状态栏的主题名称网上有很多很好的PPT，可惜一般作者都加了名字和主题，现在我们就来说说如何修改PPT中左下方状态栏的主题名称。","text":"ppt中将图片设置为高150px，宽100px。PX=pixel=像素在高度那块输入150像素，宽度输入100像素。注意不能输入px。 如何修改PPT中左下方状态栏的主题名称网上有很多很好的PPT，可惜一般作者都加了名字和主题，现在我们就来说说如何修改PPT中左下方状态栏的主题名称。 如下图所示： 在《视图》中点击《幻灯片母版》界面。选择第一张幻灯片。然后在点击左上角的重命名。记得重命名后要保存退出后再打开PPT。（！import）","categories":[{"name":"办公软件","slug":"办公软件","permalink":"http://yoursite.com/categories/办公软件/"}],"tags":[{"name":"ppt","slug":"ppt","permalink":"http://yoursite.com/tags/ppt/"}]},{"title":"电脑手工杀毒","slug":"电脑手工杀毒","date":"2019-09-23T01:52:18.000Z","updated":"2019-09-24T11:27:57.853Z","comments":true,"path":"2019/09/23/电脑手工杀毒/","link":"","permalink":"http://yoursite.com/2019/09/23/电脑手工杀毒/","excerpt":"常规杀灭进程法 有的进程在进程选项中无法删除，这时可以打开注册表编辑器（在“开始→运行”中键入regedit），找到1HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionRun 下面的键，将可疑的选项删除。 还可以通过系统的“管理工具”里面的“服务”查看目前的全部进程。这里重点要看服务中启动选项为“自动”的那部分进程，检查它们的名字、路径以及登录账户、服务属性的“恢复“里面有没有重启计算机的选项（有些机器不断属性的重新启动的秘密就在这里）。一旦发现可疑的名字需要马上禁止此进程的运行。","text":"常规杀灭进程法 有的进程在进程选项中无法删除，这时可以打开注册表编辑器（在“开始→运行”中键入regedit），找到1HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionRun 下面的键，将可疑的选项删除。 还可以通过系统的“管理工具”里面的“服务”查看目前的全部进程。这里重点要看服务中启动选项为“自动”的那部分进程，检查它们的名字、路径以及登录账户、服务属性的“恢复“里面有没有重启计算机的选项（有些机器不断属性的重新启动的秘密就在这里）。一旦发现可疑的名字需要马上禁止此进程的运行。 删除病毒程序而要彻底删除这些程序进程可以用下面的办法： 打开注册表编辑器,展开分支 1HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionRun 在右侧窗格中显示的就是本机安装的服务项，如果要删除某项服务，只要删除注册表中相关键值即可。 除了上面两种方法，我们还可以先查看这个进程文件所在的路径和名称。重启系统，按F8键进入安全模式，然后在安全模式下删除这个程序。 这里，笔者编写了容易被大家认出来的非法进程服务（系统进程）举例说明：HELLO-WORLD SERVICE ，我们可以轻松地在进程列表和“服务”中找到它。根据上面的方法，我们可以把这个进程杀掉或禁用。","categories":[{"name":"computer","slug":"computer","permalink":"http://yoursite.com/categories/computer/"}],"tags":[{"name":"computer","slug":"computer","permalink":"http://yoursite.com/tags/computer/"}]},{"title":"Computer-English-one","slug":"Computer-English-one","date":"2019-09-22T13:13:08.000Z","updated":"2019-09-24T11:29:04.285Z","comments":true,"path":"2019/09/22/Computer-English-one/","link":"","permalink":"http://yoursite.com/2019/09/22/Computer-English-one/","excerpt":"基础篇关于电脑组成部分的英语单词中央处理器： CPU主板： motherboard内存： disk硬盘： hard disk闪存盘/U盘： flash disk光盘： CD-compact disk","text":"基础篇关于电脑组成部分的英语单词中央处理器： CPU主板： motherboard内存： disk硬盘： hard disk闪存盘/U盘： flash disk光盘： CD-compact disk 驱动器： driver显示器： display / monitor触屏器： touch screen打印器： printer扬声器： speaker鼠标： mouse键盘： keyboad输入/输出设备： I/O device外部设备： peripheral主机： mainframe电缆： cable","categories":[{"name":"conmput_English","slug":"conmput-English","permalink":"http://yoursite.com/categories/conmput-English/"}],"tags":[{"name":"conmput English","slug":"conmput-English","permalink":"http://yoursite.com/tags/conmput-English/"}]},{"title":"win10部分有趣的命令提示符","slug":"命令提示符2","date":"2019-09-22T12:19:42.000Z","updated":"2019-09-24T11:28:27.766Z","comments":true,"path":"2019/09/22/命令提示符2/","link":"","permalink":"http://yoursite.com/2019/09/22/命令提示符2/","excerpt":"1）arp -a 获取IP地址，MAC地址解释：地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取物理地址的一个TCP/IP协议。主机发送信息时将包含目标IP地址的ARP请求广播到局域网络上的所有主机，并接收返回消息，以此确定目标的物理地址；收到返回消息后将该IP地址和物理地址存入本机ARP缓存中并保留一定时间，下次请求时直接查询ARP缓存以节约资源。地址解析协议是建立在网络中各个主机互相信任的基础上的，局域网络上的主机可以自主发送ARP应答消息，其他主机收到应答报文时不会检测该报文的真实性就会将其记入本机ARP缓存；由此攻击者就可以向某一主机发送伪ARP应答报文，使其发送的信息无法到达预期的主机或到达错误的主机，这就构成了一个ARP欺骗。ARP命令可用于查询本机ARP缓存中IP地址和MAC地址的对应关系、添加或删除静态对应关系等。相关协议有RARP、代理ARP。NDP用于在IPv6中代替地址解析协议。","text":"1）arp -a 获取IP地址，MAC地址解释：地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取物理地址的一个TCP/IP协议。主机发送信息时将包含目标IP地址的ARP请求广播到局域网络上的所有主机，并接收返回消息，以此确定目标的物理地址；收到返回消息后将该IP地址和物理地址存入本机ARP缓存中并保留一定时间，下次请求时直接查询ARP缓存以节约资源。地址解析协议是建立在网络中各个主机互相信任的基础上的，局域网络上的主机可以自主发送ARP应答消息，其他主机收到应答报文时不会检测该报文的真实性就会将其记入本机ARP缓存；由此攻击者就可以向某一主机发送伪ARP应答报文，使其发送的信息无法到达预期的主机或到达错误的主机，这就构成了一个ARP欺骗。ARP命令可用于查询本机ARP缓存中IP地址和MAC地址的对应关系、添加或删除静态对应关系等。相关协议有RARP、代理ARP。NDP用于在IPv6中代替地址解析协议。 2）arp -d* 命令用于清空arp缓存表。第一次运行： 第二次运行： 3）arp -s 网关IP，网关MAC，命令是将网关IP地址与相应的MAC地址进行静态绑定: 4） cleanmgr 垃圾整理: 5）compmgmt.msc 计算机管理: 6) calc 启动计算器: 7）mmc 打开控制台 8) logoff 注销（尝试的话记得保存文件） 9）osk 屏幕键盘 10）winver 检查系统信息 注：先写十个记一下，后续在操作其他内容。","categories":[{"name":"computer","slug":"computer","permalink":"http://yoursite.com/categories/computer/"}],"tags":[{"name":"cmd","slug":"cmd","permalink":"http://yoursite.com/tags/cmd/"}]},{"title":"三种打开命令提示符的方法","slug":"两种打开命令提示符的方法","date":"2019-09-22T11:40:48.000Z","updated":"2019-09-24T11:28:21.065Z","comments":true,"path":"2019/09/22/两种打开命令提示符的方法/","link":"","permalink":"http://yoursite.com/2019/09/22/两种打开命令提示符的方法/","excerpt":"1.介绍命令提示符即cmd.exe，是一个32位的命令行程序，微软Win系统基于Win10上的命令解释程序，类似于微软的DOS操作系统. 2.打开方法1） 在运行窗口输入“cmd”可以使用管理员身份来打开命令提示符2） 按组合快捷键“win+ R”打开运行，输入命令：【cmd】，点击“确定”3） 鼠标右击桌面。 新建文本文档，可随意命名。 输入 cmd 点击“保存”。 修改文件后缀为bat。 打开文本运行命令提示符。","text":"1.介绍命令提示符即cmd.exe，是一个32位的命令行程序，微软Win系统基于Win10上的命令解释程序，类似于微软的DOS操作系统. 2.打开方法1） 在运行窗口输入“cmd”可以使用管理员身份来打开命令提示符2） 按组合快捷键“win+ R”打开运行，输入命令：【cmd】，点击“确定”3） 鼠标右击桌面。 新建文本文档，可随意命名。 输入 cmd 点击“保存”。 修改文件后缀为bat。 打开文本运行命令提示符。","categories":[{"name":"computer","slug":"computer","permalink":"http://yoursite.com/categories/computer/"}],"tags":[{"name":"cmd","slug":"cmd","permalink":"http://yoursite.com/tags/cmd/"}]},{"title":"Chrome浏览器F12介绍","slug":"Chrome浏览器F12介绍","date":"2019-09-21T05:08:32.000Z","updated":"2019-09-24T11:28:57.563Z","comments":true,"path":"2019/09/21/Chrome浏览器F12介绍/","link":"","permalink":"http://yoursite.com/2019/09/21/Chrome浏览器F12介绍/","excerpt":"1. 可以直接修改页面元素选择页面上元素，右键“检查”，会打开开发者工具窗口，显示当前选择元素的源代码，可以双击进行修改。如果要修改的东西比较多，可以折叠元素并单击选择，再右键选择编辑为 HTML修改","text":"1. 可以直接修改页面元素选择页面上元素，右键“检查”，会打开开发者工具窗口，显示当前选择元素的源代码，可以双击进行修改。如果要修改的东西比较多，可以折叠元素并单击选择，再右键选择编辑为 HTML修改 2. 快速查找并定位文件查看源代码，鼠标移到开发工具窗口，按ctrl+p，输入链接地址的前几个字母，会自动联想显示所有符合条件的地址，点击打开即可。（有时第一次打开是空白内容，可再点击一次链接）打开之后，如果是js内容，就可以直接在上面打断点调试，另外可以点击内容框的左下角大括号图标“{ }”(pretty print)，对代码进行排版美化 3. 在修改别人写的网页时需要查找网页某处代码源代码 例如：","categories":[{"name":"computer","slug":"computer","permalink":"http://yoursite.com/categories/computer/"}],"tags":[{"name":"计算机","slug":"计算机","permalink":"http://yoursite.com/tags/计算机/"}]},{"title":"计算机快捷键","slug":"计算机常用小知识点","date":"2019-09-21T04:47:04.000Z","updated":"2019-09-24T11:28:05.862Z","comments":true,"path":"2019/09/21/计算机常用小知识点/","link":"","permalink":"http://yoursite.com/2019/09/21/计算机常用小知识点/","excerpt":"1. 任务管理器快捷键方法一：同时按住电脑键盘上的“Shift+Ctrl+Esc”组合键，即可直接打开任务管理器。方法二：同时按住电脑键盘上的“Alt+Ctrl+Del”组合键，然后选择“任务管理器”，也可顺利打开。 2. 在浏览器显示全屏按住电脑键盘上的F11即浏览器显示全屏，再一次退出全屏。","text":"1. 任务管理器快捷键方法一：同时按住电脑键盘上的“Shift+Ctrl+Esc”组合键，即可直接打开任务管理器。方法二：同时按住电脑键盘上的“Alt+Ctrl+Del”组合键，然后选择“任务管理器”，也可顺利打开。 2. 在浏览器显示全屏按住电脑键盘上的F11即浏览器显示全屏，再一次退出全屏。 3. 不常用但及其有用的Ctrl组合键个人认为下面几种在写代码时很有用哦。 123ctrl+f 查找 #importctrl+g 定位 ctrl+h 替换 还有一些一般人不常用的: 1234ctrl+W 关闭当前窗口ctrl +esc 打开开始菜单ctrl+Y 恢复ctrl+H 历史 其他的什么ctrl+c的就不讲了 3. 删除DEL 删除光标后的字符BACKSPRCE 删除光标前的字符 4. CTRL+SHFT键盘中文、英文、大写字母交换 5. 空格空格键 空一个空格TAB 一般等于 8 个空格的长度，当它的前面有单词的时候，和单词长度加起来刚好能被 8 整除","categories":[{"name":"computer","slug":"computer","permalink":"http://yoursite.com/categories/computer/"}],"tags":[{"name":"计算机","slug":"计算机","permalink":"http://yoursite.com/tags/计算机/"}]},{"title":"Anaconda环境中OpenCV库的安装及编程","slug":"Anaconda环境中OpenCV库的安装及编程","date":"2019-09-21T04:31:41.000Z","updated":"2019-09-24T11:04:00.835Z","comments":true,"path":"2019/09/21/Anaconda环境中OpenCV库的安装及编程/","link":"","permalink":"http://yoursite.com/2019/09/21/Anaconda环境中OpenCV库的安装及编程/","excerpt":"1. OpenCV的安装下面提示两种方法的安装 方法一：Anaconda 下使用 conda 安装 opencv：如果输入 conda install -c menpo opencv ，安装的版本是 v2.4.11；如果输入 conda install -c menpo opencv3 ，安装的版本是 v3.1.0 ；注：命令行启动的时候，需要右键-选择管理员权限。安装过程如下：","text":"1. OpenCV的安装下面提示两种方法的安装 方法一：Anaconda 下使用 conda 安装 opencv：如果输入 conda install -c menpo opencv ，安装的版本是 v2.4.11；如果输入 conda install -c menpo opencv3 ，安装的版本是 v3.1.0 ；注：命令行启动的时候，需要右键-选择管理员权限。安装过程如下： 安装完成后：执行以下命令可查看是否成功安装openCV 3 该方法很多新的python系统不支持这样运行。如果用了方法一安装不了可以尝试下面的方法。 方法二：直接安装最新版本的opencvAnaconda 下使用 conda 安装 opencv：直接输入：install python-opencv```123456789101112131415161718安装过程如下：![](https://cdn.jsdelivr.net/gh/upsilverfox/turoot/pic20190921124252.png)#### 1. OpenCV的编程1) 写图像文件```pythonimport cv2import numpy as npimg = np.zeros((3, 3), dtype = np.uint8) # 通过二维NumPy数组来简单创建一个黑色的正方形图像print(img) # 在控制台打印该图像print(img.shape) # 通过shape属性来查看图像的结构，返回行和列，如果有一个以上的通道，还会返回通道数img = cv2.cvtColor(img,cv2.COLOR_GRAY2BGR) # 利用cv2.cvtColor函数将该图像转换成BGR格式print(img)print(img.shape)cv2.namedWindow(&quot;Image&quot;) # 显示该图像cv2.imshow(&quot;Image&quot;, img)cv2.waitKey (0) 2)读图像文件","categories":[{"name":"python","slug":"python","permalink":"http://yoursite.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"hexo-next-Pisces主题的颜色配置","slug":"hexo-next主题的颜色配置","date":"2019-09-20T11:14:35.000Z","updated":"2019-09-24T11:27:09.069Z","comments":true,"path":"2019/09/20/hexo-next主题的颜色配置/","link":"","permalink":"http://yoursite.com/2019/09/20/hexo-next主题的颜色配置/","excerpt":"1.左上侧背景颜色在 D:\\博客\\themes\\next\\source\\css_schemes\\Pisces_layout.styl 里修改background的内容颜色可参考:RCG颜色对照表","text":"1.左上侧背景颜色在 D:\\博客\\themes\\next\\source\\css_schemes\\Pisces_layout.styl 里修改background的内容颜色可参考:RCG颜色对照表 2.文章部分的背景颜色可在 D:\\博客\\themes\\next\\source\\css_schemes\\Pisces_layout.styl 中修改 3.左下侧背景颜色可在 D:\\博客\\themes\\next\\source\\css_schemes\\Pisces_sidebar.styl 中作相应修改 4. 左侧上标签的底色可在 D:\\博客\\themes\\next\\source\\css_schemes\\Pisces\\menu.styl 中作相应修改： 5. 文章部分的文字颜色可在 D:\\博客\\themes\\next\\source\\css_schemes\\Pisces_layout.styl 中添加： 1color：white 如图： 6. 左上侧有标签部分文字在D:\\博客\\themes\\next\\source\\css_schemes\\Pisces\\menu.styl处需要添加： 1color: white 7. 左下侧部分文字在D:\\博客\\themes\\next\\source\\css_custom_custom.styl里添加: 1234//侧边颜色#sidebar &#123; p,span,a &#123;color: red&#125;&#125; red表示所变的颜色 8. 底部字体颜色在 D:\\博客\\themes\\next\\source\\css_custom_custom.sty 里添加 12//底部颜色.footer-inner &#123;color: white&#125; 9. 总体背景颜色在 D:\\博客\\themes\\next\\source\\css_custom_custom.styl 里添加 12345678//Custom styles.body &#123; background-image:url(https://cdn.jsdelivr.net/gh/upsilverfox/turoot/pic1.jpg);#填入照片链接 background-repeat: no-repeat;#不重复 background-attachment:fixed;#不移动 background-position:50% 50%;#照片位置 background-size: 100% 100%;#照片大小 &#125; 10. 左下侧标签栏的背景颜色在 D:\\博客\\themes\\next\\source\\css_custom_custom.styl 添加： 1234567#sidebar &#123; background:url(https://cdn.jsdelivr.net/gh/upsilverfox/turoot/pic20190920232339.png); background-size: cover; background-position:center; background-repeat:no-repeat; p,span,a &#123;color: black;&#125;&#125; 参考文献 https://blog.csdn.net/weixin_40837922/article/details/88047241 http://tool.oschina.net/commons?type=3 （RCG颜色对照表）","categories":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"python-jupyter的设置","slug":"python-1","date":"2019-09-20T07:45:02.000Z","updated":"2019-09-24T11:03:48.292Z","comments":true,"path":"2019/09/20/python-1/","link":"","permalink":"http://yoursite.com/2019/09/20/python-1/","excerpt":"1. 为jupyter设置默认浏览器jupyter 打开后无法直接跳转到浏览器解决方案1、首先打开Anoconda Prompt，输入命令 jupyter notebook –generate-config，系统会自动产生一个名为jupyter_notebook_config.py的文件，并且Anoconda Prompt窗口中会给出文件的路径。2、打开jupyter_notebook_config.py，在文件最后添加以下代码","text":"1. 为jupyter设置默认浏览器jupyter 打开后无法直接跳转到浏览器解决方案1、首先打开Anoconda Prompt，输入命令 jupyter notebook –generate-config，系统会自动产生一个名为jupyter_notebook_config.py的文件，并且Anoconda Prompt窗口中会给出文件的路径。2、打开jupyter_notebook_config.py，在文件最后添加以下代码 1234# c.NotebookApp.browser = ''import webbrowserwebbrowser.register('chrome',None,webbrowser.GenericBrowser(u'C:\\ProgramFiles(x86)\\Google\\Chrome\\Application\\chrome.exe'))c.NotebookApp.browser = 'chrome' 其中C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe，这是你想要使用的浏览器路径，可通过右键点击浏览器快捷方式查看属性得到，chrome是你的浏览器名称，可修改，修改完成后，再次打开Jupyter Notebook，则自动打开浏览器编辑窗口最重要的一点是如果你使用的浏览器例如为msedge.exe无论你如何努力都不会有结果因为jupyter notebook不支持 哈哈哈傻了吧我也被坑过 2. 为jupyter设置默认目录1、目标：在C:\\...\\jupyter-notebook-script.py与%USERPROFILE%之间加入要默认的目录地址，如 E:\\jupyter（两边加空格）2、 起始位置改为：E:\\jupyter （为你的存储的位置）然后点击应用，并确定。就可以了！","categories":[{"name":"python","slug":"python","permalink":"http://yoursite.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"c++的cmach库","slug":"c++小知识1","date":"2019-09-19T09:25:18.000Z","updated":"2019-09-24T11:05:13.768Z","comments":true,"path":"2019/09/19/c++小知识1/","link":"","permalink":"http://yoursite.com/2019/09/19/c++小知识1/","excerpt":"c++的标准库cmath常用函数1. 求解绝对值123int abs(int i); //返回整型参数i的绝对值 double fabs(double i);//返回双精度参数i的绝对值 long labs(long n);//返回长整型参数i的绝对值","text":"c++的标准库cmath常用函数1. 求解绝对值123int abs(int i); //返回整型参数i的绝对值 double fabs(double i);//返回双精度参数i的绝对值 long labs(long n);//返回长整型参数i的绝对值 2. 求解指数函数123double exp(double x);//返回e^x的值int pow(int x,int y);//返回x^y的值，其他数据类型也一样int pow10(int x);//返回10^x 3. 求余数1float fmod(float x,float y); //求x除以y的余数 4. 求解对数函数12double log(double x);//返回loge(x)的值double log10(double x);////返回log10(x)的值 5. 开根号1double sqrt(double x); //返回√x的值 6. 三角函数求解12double asin(double x);//返回x的反正弦函数值，x为弧度 double sin(double x);//返回x的正弦函数值，x为弧度 7. 取整12double ceil(double x);//返回不小于x的最小整数double floor(double x);//返回不大于x的最大整数","categories":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/categories/c/"}],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"}]},{"title":"github代码上传","slug":"github代码上传","date":"2019-09-19T05:50:59.000Z","updated":"2019-09-24T11:29:15.409Z","comments":true,"path":"2019/09/19/github代码上传/","link":"","permalink":"http://yoursite.com/2019/09/19/github代码上传/","excerpt":"1.准备工作1）安装Git Bash因为这个是国外的软件是被限制的，推荐挂个代理本文推荐一个代理软件链接：https://pan.baidu.com/s/1trPZKgaAxktM8Il9OpxwvA提取码：xfhn目前本人正在使用的一个代理链接：https://www.52jying.com/nobe如果崩了大家可以上网百度一个自己找一个代理网址。","text":"1.准备工作1）安装Git Bash因为这个是国外的软件是被限制的，推荐挂个代理本文推荐一个代理软件链接：https://pan.baidu.com/s/1trPZKgaAxktM8Il9OpxwvA提取码：xfhn目前本人正在使用的一个代理链接：https://www.52jying.com/nobe如果崩了大家可以上网百度一个自己找一个代理网址。 2） 配置SSH keyssh key是用来解决本地与服务器的连接问题的。打开git bash输入命令 1$ cd ~/. ssh #检查本机已存在的ssh密钥 如果提示：No such file or directory 说明你是第一次使用git。 1ssh-keygen -t rsa -C \"邮件地址\" 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\\ id_rsa.pub 文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key： 将刚复制的内容粘贴到key那里，title随便填，保存。2) 测试是否成功 1$ ssh -T git@github.com # 注意邮箱地址不用改 如果提示： 1Are you sure you want to continue connecting (yes/no)? 输入yes，然后会看到： 1Hi liuxianan! You've successfully authenticated, but GitHub does not provide shell access. 看到这个信息说明SSH已配置成功！此时你还需要配置： 3. 创建仓库 4. 上传代码1）创建目录在目录下右键打开git bash。（这里创建的是text）2) 将当前目录变为git管理仓库代码： 1$ git init 如图： 同理将本地仓库链接到GitHub远程仓库： 12$ git remote add orign https://github.com/upsilverfox/fox.git#这个只要写一次就好，其中https://github.com/upsilverfox/fox为你的仓库地址。 运行成功后本地目录下将会增加 .git 如下图所示： 这样本地仓库就配置好了。 3）进行测试将一篇holle_word的文本文件放入text文件夹中。 重新在text目录下右键打开git bash。输入代码： 123$ git add . #这是为了告诉git将文件转到了仓库$ git commit -m \"fist\" #对本次上传进行说明，一定要写,而且每次上传都要写$ git push -u orign master #上传代码 示例图： 这样就成功了，有什么问题联系作者哦，虽然不一定能解决，哈哈哈哈！ 4. 参考文献 https://shansan.top/2019/03/08/将本地项目推送到GitHub远程仓库/","categories":[{"name":"github","slug":"github","permalink":"http://yoursite.com/categories/github/"}],"tags":[{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"hexo从零开始到搭建完整","slug":"hexo从零开始到搭建完整","date":"2019-09-18T13:50:46.000Z","updated":"2019-09-24T11:27:01.186Z","comments":true,"path":"2019/09/18/hexo从零开始到搭建完整/","link":"","permalink":"http://yoursite.com/2019/09/18/hexo从零开始到搭建完整/","excerpt":"1. 准备工作1）安装Git Bash因为这个是国外的软件是被限制的，推荐挂个代理本文推荐一个代理软件链接：https://pan.baidu.com/s/1trPZKgaAxktM8Il9OpxwvA提取码：xfhn目前本人正在使用的一个代理链接：https://www.52jying.com/nobe如果崩了大家可以上网百度一个自己找一个代理网址。","text":"1. 准备工作1）安装Git Bash因为这个是国外的软件是被限制的，推荐挂个代理本文推荐一个代理软件链接：https://pan.baidu.com/s/1trPZKgaAxktM8Il9OpxwvA提取码：xfhn目前本人正在使用的一个代理链接：https://www.52jying.com/nobe如果崩了大家可以上网百度一个自己找一个代理网址。 2）安装node.js、npm3） 有一个GitHub账号 2. GitHub创建仓库和一些小细节1）GitHub账号创建后邮箱需要进行验证，如果想要在手机上进行验证需要将电脑上的GitHub账号退出登录。邮箱验证完毕后需要将邮箱进行公开，因为GitHub默认为private。 2）创建GitHub仓库 3. 配置SSH keyssh key是用来解决本地与服务器的连接问题的。1）打开git bash输入命令 1$ cd ~/. ssh #检查本机已存在的ssh密钥 如果提示：No such file or directory 说明你是第一次使用git。 1ssh-keygen -t rsa -C \"邮件地址\" 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\\ id_rsa.pub 文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key： 将刚复制的内容粘贴到key那里，title随便填，保存。2) 测试是否成功 1$ ssh -T git@github.com # 注意邮箱地址不用改 如果提示： 1Are you sure you want to continue connecting (yes/no)? 输入yes，然后会看到： 1Hi liuxianan! You've successfully authenticated, but GitHub does not provide shell access. 看到这个信息说明SSH已配置成功！此时你还需要配置： 12$ git config --global user.name \"liuxianan\"// 你的github用户名，非昵称$ git config --global user.email \"xxx@qq.com\"//填写你GitHub注册的邮箱 4. hexo的安装与配置1）hexo安装代码在电脑的某个地方新建blog一个文件夹（文件名可以随意取），该文件夹是用来存放代码的地方，鼠标右键点击文件夹，选择git bash指令输入代码(之后的命令都是这样操作) 12npm install -g hexohexo init hexo就会自动生成一些文件到你blog目录下，之后的操作都在这个目录下进行的。 2）测试效果 12$hexo g #生成$hexo s #启动服务 hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突问题请参考这篇文章：http://blog.liuxianan.com/windows-port-bind.html 3) 修改主题既然默认主题很丑，那我们别的不做，首先来替换一个好看点的主题。这是 官方主题。个人比较喜欢的一个个主题 https://github.com/litten/hexo-theme-yilia 修改_config.yml中的theme: landscape改为theme: yilia，（yilia为你复制下来的文件名）然后重新执行hexo g来重新生成。如果出现一些莫名其妙的问题，可以先执行hexo clean来清理一下public的内容，然后再来重新生成和发布 4）上传github如果你一切都配置好了，发布上传很容易，一句hexo d就搞定，当然关键还是你要把所有东西配置好。首先，ssh key肯定要配置好。其次，配置_config.yml中有关deploy的部分： 1234deploy: type: git repository: https://github.com/liuxianan/liuxianan.github.io.git branch: master 其中https://github.com/liuxianan/liuxianan.github.io.git为你创建仓库里的网址安装插件 1npm install hexo-deployer-git --save 5) 常见的一些hexo命令 1234567hexo new \"postName\" #新建文章hexo new page \"pageName\" #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）hexo deploy #部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 缩写： 1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 组合命令 123组合命令：hexo s -g #生成并本地预览hexo d -g #生成并上传 5. 写博客1）定位到我们的blog根目录下，输入代码： hexo new 'my-first-work' hexo会帮我们在_posts下生成相关md文件： 我们只需要打开这个文件就可以开始写博客了，默认生成如下内容： 2）推荐一款写博客的软件Visual Studio Code链接：https://code.visualstudio.com/下载完后可还可以在软件里面下载markdown 图片上传推荐免费图床工具链接：https://www.itrhx.com/2019/08/01/A27-image-hosting/ 6. 参考 https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html http://www.cnblogs.com/zhcncn/p/4097881.html http://www.jianshu.com/p/05289a4bc8b2 https://www.itrhx.com/2019/08/01/A27-image-hosting/","categories":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/categories/hexo/"}],"tags":[{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"刷机教程","slug":"刷机教程","date":"2019-09-18T10:14:00.000Z","updated":"2019-09-25T09:49:55.478Z","comments":true,"path":"2019/09/18/刷机教程/","link":"","permalink":"http://yoursite.com/2019/09/18/刷机教程/","excerpt":"1. 前言 电脑系统崩溃了，必须得安装系统，以下是本人归类装机的教程 2. 准备工作 自带两个U盘，一个U盘来制作装机U盘，另一个U盘用来下载window10的镜像 3.下载制作U盘软件制作装机U盘这里使用的是PE工具箱。","text":"1. 前言 电脑系统崩溃了，必须得安装系统，以下是本人归类装机的教程 2. 准备工作 自带两个U盘，一个U盘来制作装机U盘，另一个U盘用来下载window10的镜像 3.下载制作U盘软件制作装机U盘这里使用的是PE工具箱。 链接: https://pan.baidu.com/s/1smOthvlX3JQJNecebcO35A提取码：opn0 下载的软件存放到用来制作装机U盘中，打开程序安装示意图如下： 1）推荐使用自定义的安装 2）在安装方法处建议选择方案三，U盘卷标为你的U盘名，pe壁纸下建议全选，当然不全选也行。然后点击安装就行了。 4. 下载 windows10镜像 推荐链接：https://msdn.itellyou.cn/ 5. 开始进行刷机 1）将电脑重启，在电脑开机时不断给点击F12进入刷机系统。 2）将电脑磁盘进行分区打开分区助手： 点击快速分区： 记住磁盘类型要选择GPT,扇区选择4096，选择完后点击开始执行 4）将电脑格式化分区后插入你下载好window10镜像的U盘，点击安装包就可以安装了。记住在安装完window10时电脑会关机，当电脑关机时要将U盘拔出。 示意图： 6. 装好系统后安装Windows10后，windows10是未激活状态，下面推荐一款Windows10（激活）工具链接：https://pan.baidu.com/s/1hV9lNjew_Ne1drM216e9-A提取码：l6cx还有一款office（激活）工具链接：https://pan.baidu.com/s/1KEahExeIv95iekWLaNpiRw提取码：a7fw还有什么不懂可以留言！！！","categories":[{"name":"刷机教程","slug":"刷机教程","permalink":"http://yoursite.com/categories/刷机教程/"}],"tags":[{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]}]}